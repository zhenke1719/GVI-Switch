%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 2  

#imu_topic: "/mavros/imu/data_raw"
imu_topic: "/mavros/imu/data_raw"
#imu_topic: "/camera/imu"
#imu_topic: "/imu0"
#image0_topic: "/cam0/image_raw"
#image1_topic: "/cam1/image_raw"
image0_topic: "/camera/infra1/image_rect_raw"
image1_topic: "/camera/infra2/image_rect_raw"
output_path: "/home/xu/output"

cam0_calib: "left.yaml"
cam1_calib: "right.yaml"
image_width: 640
image_height: 480
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 2.8018392865288844e-02, 2.4471086609475223e-02,
       9.9930782823982622e-01, 7.5808702009880602e-02,
       -9.9933515920600424e-01, 2.4016183530991553e-02,
       2.7431049985665978e-02, 1.4248974260959647e-02,
       -2.3328292606976386e-02, -9.9941202156505882e-01,
       2.5127712098119925e-02, -6.0716390795115358e-02, 0., 0., 0., 1. ]
body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 2.8717420009890082e-02, 2.5153105566166900e-02,
       9.9927104985001569e-01, 7.4643699439718339e-02,
       -9.9931847158278675e-01, 2.3917375519785011e-02,
       2.8116747708228307e-02, -3.5873973001997336e-02,
       -2.3192717422030162e-02, -9.9939745868629393e-01,
       2.5822808328278546e-02, -6.1287622042819664e-02, 0., 0., 0., 1. ]
#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance  常用
acc_n: 0.5  # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.3  # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.002   # accelerometer bias random work noise standard deviation.  #0.002
gyr_w: 0.002   # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.805         # gravity magnitude

#imu parameters       The more accurate parameters you provide, the better performance   最好
#acc_n: 0.09          # accelerometer measurement noise standard deviation. #0.2   0.04
#gyr_n: 0.04         # gyroscope measurement noise standard deviation.     #0.05  0.004
#acc_w: 0.02         # accelerometer bias random work noise standard deviation.  #0.02
#gyr_w: 2.0e-4       # gyroscope bias random work noise standard deviation.     #4.0e-5
#g_norm: 9.79007     # gravity magnitude

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: 0.019                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/xu/vins_output/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
